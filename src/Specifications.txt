***Requirements specified on 24 march 2021***
1)user should not be able to display or raise salary if no employee information exists i.e you do not have any information of employees.

2)The raise salary method should be able to be accessed only after calling the display method immediately before calling the raise salary method each time.

3)The user can have access to exit functionality irrespecive of any conditions.

4)The salary should be raised based on the employee_id.

5)The employee_id should be of the format ccxx
where cc refers to the first 2 characters (or) the 2 character code of the company that the employee works for.
xx represents the numerical value between(11-20).

6)If you meet all the constraints mentioned above the user is prompted to enter a valid employe_id to raise the salary of that employee.
:if the employee id is incorrect or doesnt match with the employee_id's existing then the user should be prompted with an appropriate message to enter a valid employee_id until the employee_id entered is valid.

7)After entering a valid employee_id the user is asked to enter the hike amount that they wish to raise for that particular employee with mentioned employee_id.

8)The entered amount of hike should be in the range of 5000-50,000 also make sure that the amount is not in a decimal format.

9)If the conditions to raise salary are met then the respective updation of salary for the specified employee should be done accordingly.

10)The constraint while entering the information of the employee should be such that the user cannot enter duplicate names i.e if the exact same name exists in the system already then the user should prompted about that and should be asked to try entering the name in some other way such that it doesnt violate the duplicacy condition.


1)deletion functionality:
delete a record from the system based on the employe_id
constraint:The id deleted should not be resued again,id can be of the format ccxx where cc represents the 2 character code of company and xx can have values from 11-99 (inclusive).
The system cannot accept more than 10 entries.

2)copy all the data into file system using file handling support and perform CRUD opeations on it by following all the rules accordingly.

3)The system should load the contents from the "file" each time it is run and then continue the operations based  on the data stored in the file,it can be adding a record,deleting a record,updating salary,displaying or exit.

4)optional requirement:add a time displaying functionality to your project which displays the current time and keeps updating accordingly.